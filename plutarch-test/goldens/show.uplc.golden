unit (program 1.0.0 "()")
bool.true (program 1.0.0 ((\i0 -> force (force ifThenElse i1 (delay "PTrue") (delay "PFalse"))) True))
bool.false (program 1.0.0 ((\i0 -> force (force ifThenElse i1 (delay "PTrue") (delay "PFalse"))) False))
int.0 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> appendString (force (i14 (lessThanInteger i1 0) (delay "-") (delay ""))) ((\i0 -> (\i0 -> force (i16 (equalsInteger i2 0) (delay (i5 i1)) (delay ((\i0 -> appendString i1 (i6 i2)) (i4 i2))))) (remainderInteger (force (i15 (lessThanEqualsInteger i2 (subtractInteger 0 1)) (delay (subtractInteger 0 i2)) (delay i2))) 10)) (quotientInteger (force (i14 (lessThanEqualsInteger i1 (subtractInteger 0 1)) (delay (subtractInteger 0 i1)) (delay i1))) 10))) 0) (\i0 -> force (i12 (equalsInteger i1 0) (delay i2) (delay (force (i12 (equalsInteger i1 1) (delay i3) (delay (force (i12 (equalsInteger i1 2) (delay i4) (delay (force (i12 (equalsInteger i1 3) (delay i5) (delay (force (i12 (equalsInteger i1 4) (delay i6) (delay (force (i12 (equalsInteger i1 5) (delay i7) (delay (force (i12 (equalsInteger i1 6) (delay i8) (delay (force (i12 (equalsInteger i1 7) (delay i9) (delay (force (i12 (equalsInteger i1 8) (delay i10) (delay (force (i12 (equalsInteger i1 9) (delay i11) (delay error))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") (force ifThenElse)))
int.5 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> appendString (force (i14 (lessThanInteger i1 0) (delay "-") (delay ""))) ((\i0 -> (\i0 -> force (i16 (equalsInteger i2 0) (delay (i5 i1)) (delay ((\i0 -> appendString i1 (i6 i2)) (i4 i2))))) (remainderInteger (force (i15 (lessThanEqualsInteger i2 (subtractInteger 0 1)) (delay (subtractInteger 0 i2)) (delay i2))) 10)) (quotientInteger (force (i14 (lessThanEqualsInteger i1 (subtractInteger 0 1)) (delay (subtractInteger 0 i1)) (delay i1))) 10))) 5) (\i0 -> force (i12 (equalsInteger i1 0) (delay i2) (delay (force (i12 (equalsInteger i1 1) (delay i3) (delay (force (i12 (equalsInteger i1 2) (delay i4) (delay (force (i12 (equalsInteger i1 3) (delay i5) (delay (force (i12 (equalsInteger i1 4) (delay i6) (delay (force (i12 (equalsInteger i1 5) (delay i7) (delay (force (i12 (equalsInteger i1 6) (delay i8) (delay (force (i12 (equalsInteger i1 7) (delay i9) (delay (force (i12 (equalsInteger i1 8) (delay i10) (delay (force (i12 (equalsInteger i1 9) (delay i11) (delay error))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") (force ifThenElse)))
int.-5 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> appendString (force (i14 (lessThanInteger i1 0) (delay "-") (delay ""))) ((\i0 -> (\i0 -> force (i16 (equalsInteger i2 0) (delay (i5 i1)) (delay ((\i0 -> appendString i1 (i6 i2)) (i4 i2))))) (remainderInteger (force (i15 (lessThanEqualsInteger i2 (subtractInteger 0 1)) (delay (subtractInteger 0 i2)) (delay i2))) 10)) (quotientInteger (force (i14 (lessThanEqualsInteger i1 (subtractInteger 0 1)) (delay (subtractInteger 0 i1)) (delay i1))) 10))) -5) (\i0 -> force (i12 (equalsInteger i1 0) (delay i2) (delay (force (i12 (equalsInteger i1 1) (delay i3) (delay (force (i12 (equalsInteger i1 2) (delay i4) (delay (force (i12 (equalsInteger i1 3) (delay i5) (delay (force (i12 (equalsInteger i1 4) (delay i6) (delay (force (i12 (equalsInteger i1 5) (delay i7) (delay (force (i12 (equalsInteger i1 6) (delay i8) (delay (force (i12 (equalsInteger i1 7) (delay i9) (delay (force (i12 (equalsInteger i1 8) (delay i10) (delay (force (i12 (equalsInteger i1 9) (delay i11) (delay error))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") (force ifThenElse)))
int.10 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> appendString (force (i14 (lessThanInteger i1 0) (delay "-") (delay ""))) ((\i0 -> (\i0 -> force (i16 (equalsInteger i2 0) (delay (i5 i1)) (delay ((\i0 -> appendString i1 (i6 i2)) (i4 i2))))) (remainderInteger (force (i15 (lessThanEqualsInteger i2 (subtractInteger 0 1)) (delay (subtractInteger 0 i2)) (delay i2))) 10)) (quotientInteger (force (i14 (lessThanEqualsInteger i1 (subtractInteger 0 1)) (delay (subtractInteger 0 i1)) (delay i1))) 10))) 10) (\i0 -> force (i12 (equalsInteger i1 0) (delay i2) (delay (force (i12 (equalsInteger i1 1) (delay i3) (delay (force (i12 (equalsInteger i1 2) (delay i4) (delay (force (i12 (equalsInteger i1 3) (delay i5) (delay (force (i12 (equalsInteger i1 4) (delay i6) (delay (force (i12 (equalsInteger i1 5) (delay i7) (delay (force (i12 (equalsInteger i1 6) (delay i8) (delay (force (i12 (equalsInteger i1 7) (delay i9) (delay (force (i12 (equalsInteger i1 8) (delay i10) (delay (force (i12 (equalsInteger i1 9) (delay i11) (delay error))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") (force ifThenElse)))
int.-10 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> appendString (force (i14 (lessThanInteger i1 0) (delay "-") (delay ""))) ((\i0 -> (\i0 -> force (i16 (equalsInteger i2 0) (delay (i5 i1)) (delay ((\i0 -> appendString i1 (i6 i2)) (i4 i2))))) (remainderInteger (force (i15 (lessThanEqualsInteger i2 (subtractInteger 0 1)) (delay (subtractInteger 0 i2)) (delay i2))) 10)) (quotientInteger (force (i14 (lessThanEqualsInteger i1 (subtractInteger 0 1)) (delay (subtractInteger 0 i1)) (delay i1))) 10))) -10) (\i0 -> force (i12 (equalsInteger i1 0) (delay i2) (delay (force (i12 (equalsInteger i1 1) (delay i3) (delay (force (i12 (equalsInteger i1 2) (delay i4) (delay (force (i12 (equalsInteger i1 3) (delay i5) (delay (force (i12 (equalsInteger i1 4) (delay i6) (delay (force (i12 (equalsInteger i1 5) (delay i7) (delay (force (i12 (equalsInteger i1 6) (delay i8) (delay (force (i12 (equalsInteger i1 7) (delay i9) (delay (force (i12 (equalsInteger i1 8) (delay i10) (delay (force (i12 (equalsInteger i1 9) (delay i11) (delay error))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") (force ifThenElse)))
int.14 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> appendString (force (i14 (lessThanInteger i1 0) (delay "-") (delay ""))) ((\i0 -> (\i0 -> force (i16 (equalsInteger i2 0) (delay (i5 i1)) (delay ((\i0 -> appendString i1 (i6 i2)) (i4 i2))))) (remainderInteger (force (i15 (lessThanEqualsInteger i2 (subtractInteger 0 1)) (delay (subtractInteger 0 i2)) (delay i2))) 10)) (quotientInteger (force (i14 (lessThanEqualsInteger i1 (subtractInteger 0 1)) (delay (subtractInteger 0 i1)) (delay i1))) 10))) 14) (\i0 -> force (i12 (equalsInteger i1 0) (delay i2) (delay (force (i12 (equalsInteger i1 1) (delay i3) (delay (force (i12 (equalsInteger i1 2) (delay i4) (delay (force (i12 (equalsInteger i1 3) (delay i5) (delay (force (i12 (equalsInteger i1 4) (delay i6) (delay (force (i12 (equalsInteger i1 5) (delay i7) (delay (force (i12 (equalsInteger i1 6) (delay i8) (delay (force (i12 (equalsInteger i1 7) (delay i9) (delay (force (i12 (equalsInteger i1 8) (delay i10) (delay (force (i12 (equalsInteger i1 9) (delay i11) (delay error))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") (force ifThenElse)))
int.-14 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> appendString (force (i14 (lessThanInteger i1 0) (delay "-") (delay ""))) ((\i0 -> (\i0 -> force (i16 (equalsInteger i2 0) (delay (i5 i1)) (delay ((\i0 -> appendString i1 (i6 i2)) (i4 i2))))) (remainderInteger (force (i15 (lessThanEqualsInteger i2 (subtractInteger 0 1)) (delay (subtractInteger 0 i2)) (delay i2))) 10)) (quotientInteger (force (i14 (lessThanEqualsInteger i1 (subtractInteger 0 1)) (delay (subtractInteger 0 i1)) (delay i1))) 10))) -14) (\i0 -> force (i12 (equalsInteger i1 0) (delay i2) (delay (force (i12 (equalsInteger i1 1) (delay i3) (delay (force (i12 (equalsInteger i1 2) (delay i4) (delay (force (i12 (equalsInteger i1 3) (delay i5) (delay (force (i12 (equalsInteger i1 4) (delay i6) (delay (force (i12 (equalsInteger i1 5) (delay i7) (delay (force (i12 (equalsInteger i1 6) (delay i8) (delay (force (i12 (equalsInteger i1 7) (delay i9) (delay (force (i12 (equalsInteger i1 8) (delay i10) (delay (force (i12 (equalsInteger i1 9) (delay i11) (delay error))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") (force ifThenElse)))
int.102 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> appendString (force (i14 (lessThanInteger i1 0) (delay "-") (delay ""))) ((\i0 -> (\i0 -> force (i16 (equalsInteger i2 0) (delay (i5 i1)) (delay ((\i0 -> appendString i1 (i6 i2)) (i4 i2))))) (remainderInteger (force (i15 (lessThanEqualsInteger i2 (subtractInteger 0 1)) (delay (subtractInteger 0 i2)) (delay i2))) 10)) (quotientInteger (force (i14 (lessThanEqualsInteger i1 (subtractInteger 0 1)) (delay (subtractInteger 0 i1)) (delay i1))) 10))) 102) (\i0 -> force (i12 (equalsInteger i1 0) (delay i2) (delay (force (i12 (equalsInteger i1 1) (delay i3) (delay (force (i12 (equalsInteger i1 2) (delay i4) (delay (force (i12 (equalsInteger i1 3) (delay i5) (delay (force (i12 (equalsInteger i1 4) (delay i6) (delay (force (i12 (equalsInteger i1 5) (delay i7) (delay (force (i12 (equalsInteger i1 6) (delay i8) (delay (force (i12 (equalsInteger i1 7) (delay i9) (delay (force (i12 (equalsInteger i1 8) (delay i10) (delay (force (i12 (equalsInteger i1 9) (delay i11) (delay error))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") (force ifThenElse)))
int.-102 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> appendString (force (i14 (lessThanInteger i1 0) (delay "-") (delay ""))) ((\i0 -> (\i0 -> force (i16 (equalsInteger i2 0) (delay (i5 i1)) (delay ((\i0 -> appendString i1 (i6 i2)) (i4 i2))))) (remainderInteger (force (i15 (lessThanEqualsInteger i2 (subtractInteger 0 1)) (delay (subtractInteger 0 i2)) (delay i2))) 10)) (quotientInteger (force (i14 (lessThanEqualsInteger i1 (subtractInteger 0 1)) (delay (subtractInteger 0 i1)) (delay i1))) 10))) -102) (\i0 -> force (i12 (equalsInteger i1 0) (delay i2) (delay (force (i12 (equalsInteger i1 1) (delay i3) (delay (force (i12 (equalsInteger i1 2) (delay i4) (delay (force (i12 (equalsInteger i1 3) (delay i5) (delay (force (i12 (equalsInteger i1 4) (delay i6) (delay (force (i12 (equalsInteger i1 5) (delay i7) (delay (force (i12 (equalsInteger i1 6) (delay i8) (delay (force (i12 (equalsInteger i1 7) (delay i9) (delay (force (i12 (equalsInteger i1 8) (delay i10) (delay (force (i12 (equalsInteger i1 9) (delay i11) (delay error))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") (force ifThenElse)))
bytestring.empty (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> appendString "0x" ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> (\i0 -> \i0 -> (\i0 -> force (i23 (equalsInteger i1 0) (delay i3) (delay ((\i0 -> (\i0 -> i4 i2 i1) (sliceByteString 1 (subtractInteger i2 1) i5)) (indexByteString i4 0))))) (lengthOfByteString i3)) "" (\i0 -> \i0 -> appendString ((\i0 -> (\i0 -> appendString (i8 i2) (i8 i1)) (remainderInteger i3 16)) (quotientInteger i2 16)) (i4 i1))) i1)) #) (\i0 -> force (i17 (equalsInteger i1 0) (delay i2) (delay (force (i17 (equalsInteger i1 1) (delay i3) (delay (force (i17 (equalsInteger i1 2) (delay i4) (delay (force (i17 (equalsInteger i1 3) (delay i5) (delay (force (i17 (equalsInteger i1 4) (delay i6) (delay (force (i17 (equalsInteger i1 5) (delay i7) (delay (force (i17 (equalsInteger i1 6) (delay i8) (delay (force (i17 (equalsInteger i1 7) (delay i9) (delay (force (i17 (equalsInteger i1 8) (delay i10) (delay (force (i17 (equalsInteger i1 9) (delay i11) (delay (force (i17 (equalsInteger i1 10) (delay i12) (delay (force (i17 (equalsInteger i1 11) (delay i13) (delay (force (i17 (equalsInteger i1 12) (delay i14) (delay (force (i17 (equalsInteger i1 13) (delay i15) (delay (force (i17 (equalsInteger i1 14) (delay i16) (delay (force (i17 (equalsInteger i1 15) (delay i18) (delay error))))))))))))))))))))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") "a") "b") "c") "d") "e") (force ifThenElse)) "f"))
bytestring.1 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> appendString "0x" ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> (\i0 -> \i0 -> (\i0 -> force (i23 (equalsInteger i1 0) (delay i3) (delay ((\i0 -> (\i0 -> i4 i2 i1) (sliceByteString 1 (subtractInteger i2 1) i5)) (indexByteString i4 0))))) (lengthOfByteString i3)) "" (\i0 -> \i0 -> appendString ((\i0 -> (\i0 -> appendString (i8 i2) (i8 i1)) (remainderInteger i3 16)) (quotientInteger i2 16)) (i4 i1))) i1)) #14) (\i0 -> force (i17 (equalsInteger i1 0) (delay i2) (delay (force (i17 (equalsInteger i1 1) (delay i3) (delay (force (i17 (equalsInteger i1 2) (delay i4) (delay (force (i17 (equalsInteger i1 3) (delay i5) (delay (force (i17 (equalsInteger i1 4) (delay i6) (delay (force (i17 (equalsInteger i1 5) (delay i7) (delay (force (i17 (equalsInteger i1 6) (delay i8) (delay (force (i17 (equalsInteger i1 7) (delay i9) (delay (force (i17 (equalsInteger i1 8) (delay i10) (delay (force (i17 (equalsInteger i1 9) (delay i11) (delay (force (i17 (equalsInteger i1 10) (delay i12) (delay (force (i17 (equalsInteger i1 11) (delay i13) (delay (force (i17 (equalsInteger i1 12) (delay i14) (delay (force (i17 (equalsInteger i1 13) (delay i15) (delay (force (i17 (equalsInteger i1 14) (delay i16) (delay (force (i17 (equalsInteger i1 15) (delay i18) (delay error))))))))))))))))))))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") "a") "b") "c") "d") "e") (force ifThenElse)) "f"))
bytestring.2 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> appendString "0x" ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> (\i0 -> \i0 -> (\i0 -> force (i23 (equalsInteger i1 0) (delay i3) (delay ((\i0 -> (\i0 -> i4 i2 i1) (sliceByteString 1 (subtractInteger i2 1) i5)) (indexByteString i4 0))))) (lengthOfByteString i3)) "" (\i0 -> \i0 -> appendString ((\i0 -> (\i0 -> appendString (i8 i2) (i8 i1)) (remainderInteger i3 16)) (quotientInteger i2 16)) (i4 i1))) i1)) #14af) (\i0 -> force (i17 (equalsInteger i1 0) (delay i2) (delay (force (i17 (equalsInteger i1 1) (delay i3) (delay (force (i17 (equalsInteger i1 2) (delay i4) (delay (force (i17 (equalsInteger i1 3) (delay i5) (delay (force (i17 (equalsInteger i1 4) (delay i6) (delay (force (i17 (equalsInteger i1 5) (delay i7) (delay (force (i17 (equalsInteger i1 6) (delay i8) (delay (force (i17 (equalsInteger i1 7) (delay i9) (delay (force (i17 (equalsInteger i1 8) (delay i10) (delay (force (i17 (equalsInteger i1 9) (delay i11) (delay (force (i17 (equalsInteger i1 10) (delay i12) (delay (force (i17 (equalsInteger i1 11) (delay i13) (delay (force (i17 (equalsInteger i1 12) (delay i14) (delay (force (i17 (equalsInteger i1 13) (delay i15) (delay (force (i17 (equalsInteger i1 14) (delay i16) (delay (force (i17 (equalsInteger i1 15) (delay i18) (delay error))))))))))))))))))))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") "a") "b") "c") "d") "e") (force ifThenElse)) "f"))
bytestring.3 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> appendString "0x" ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> (\i0 -> \i0 -> (\i0 -> force (i23 (equalsInteger i1 0) (delay i3) (delay ((\i0 -> (\i0 -> i4 i2 i1) (sliceByteString 1 (subtractInteger i2 1) i5)) (indexByteString i4 0))))) (lengthOfByteString i3)) "" (\i0 -> \i0 -> appendString ((\i0 -> (\i0 -> appendString (i8 i2) (i8 i1)) (remainderInteger i3 16)) (quotientInteger i2 16)) (i4 i1))) i1)) #14af03) (\i0 -> force (i17 (equalsInteger i1 0) (delay i2) (delay (force (i17 (equalsInteger i1 1) (delay i3) (delay (force (i17 (equalsInteger i1 2) (delay i4) (delay (force (i17 (equalsInteger i1 3) (delay i5) (delay (force (i17 (equalsInteger i1 4) (delay i6) (delay (force (i17 (equalsInteger i1 5) (delay i7) (delay (force (i17 (equalsInteger i1 6) (delay i8) (delay (force (i17 (equalsInteger i1 7) (delay i9) (delay (force (i17 (equalsInteger i1 8) (delay i10) (delay (force (i17 (equalsInteger i1 9) (delay i11) (delay (force (i17 (equalsInteger i1 10) (delay i12) (delay (force (i17 (equalsInteger i1 11) (delay i13) (delay (force (i17 (equalsInteger i1 12) (delay i14) (delay (force (i17 (equalsInteger i1 13) (delay i15) (delay (force (i17 (equalsInteger i1 14) (delay i16) (delay (force (i17 (equalsInteger i1 15) (delay i18) (delay error))))))))))))))))))))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") "a") "b") "c") "d") "e") (force ifThenElse)) "f"))
bytestring.n (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> appendString "0x" ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> (\i0 -> \i0 -> (\i0 -> force (i23 (equalsInteger i1 0) (delay i3) (delay ((\i0 -> (\i0 -> i4 i2 i1) (sliceByteString 1 (subtractInteger i2 1) i5)) (indexByteString i4 0))))) (lengthOfByteString i3)) "" (\i0 -> \i0 -> appendString ((\i0 -> (\i0 -> appendString (i8 i2) (i8 i1)) (remainderInteger i3 16)) (quotientInteger i2 16)) (i4 i1))) i1)) #ffffff) (\i0 -> force (i17 (equalsInteger i1 0) (delay i2) (delay (force (i17 (equalsInteger i1 1) (delay i3) (delay (force (i17 (equalsInteger i1 2) (delay i4) (delay (force (i17 (equalsInteger i1 3) (delay i5) (delay (force (i17 (equalsInteger i1 4) (delay i6) (delay (force (i17 (equalsInteger i1 5) (delay i7) (delay (force (i17 (equalsInteger i1 6) (delay i8) (delay (force (i17 (equalsInteger i1 7) (delay i9) (delay (force (i17 (equalsInteger i1 8) (delay i10) (delay (force (i17 (equalsInteger i1 9) (delay i11) (delay (force (i17 (equalsInteger i1 10) (delay i12) (delay (force (i17 (equalsInteger i1 11) (delay i13) (delay (force (i17 (equalsInteger i1 12) (delay i14) (delay (force (i17 (equalsInteger i1 13) (delay i15) (delay (force (i17 (equalsInteger i1 14) (delay i16) (delay (force (i17 (equalsInteger i1 15) (delay i18) (delay error))))))))))))))))))))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") "a") "b") "c") "d") "e") (force ifThenElse)) "f"))
bytestring.0 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> appendString "0x" ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> (\i0 -> \i0 -> (\i0 -> force (i23 (equalsInteger i1 0) (delay i3) (delay ((\i0 -> (\i0 -> i4 i2 i1) (sliceByteString 1 (subtractInteger i2 1) i5)) (indexByteString i4 0))))) (lengthOfByteString i3)) "" (\i0 -> \i0 -> appendString ((\i0 -> (\i0 -> appendString (i8 i2) (i8 i1)) (remainderInteger i3 16)) (quotientInteger i2 16)) (i4 i1))) i1)) #000000) (\i0 -> force (i17 (equalsInteger i1 0) (delay i2) (delay (force (i17 (equalsInteger i1 1) (delay i3) (delay (force (i17 (equalsInteger i1 2) (delay i4) (delay (force (i17 (equalsInteger i1 3) (delay i5) (delay (force (i17 (equalsInteger i1 4) (delay i6) (delay (force (i17 (equalsInteger i1 5) (delay i7) (delay (force (i17 (equalsInteger i1 6) (delay i8) (delay (force (i17 (equalsInteger i1 7) (delay i9) (delay (force (i17 (equalsInteger i1 8) (delay i10) (delay (force (i17 (equalsInteger i1 9) (delay i11) (delay (force (i17 (equalsInteger i1 10) (delay i12) (delay (force (i17 (equalsInteger i1 11) (delay i13) (delay (force (i17 (equalsInteger i1 12) (delay i14) (delay (force (i17 (equalsInteger i1 13) (delay i15) (delay (force (i17 (equalsInteger i1 14) (delay i16) (delay (force (i17 (equalsInteger i1 15) (delay i18) (delay error))))))))))))))))))))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") "a") "b") "c") "d") "e") (force ifThenElse)) "f"))
str.empty (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> appendString i3 (appendString (decodeUtf8 ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> (\i0 -> (\i0 -> force (i6 (equalsInteger i1 0) (delay i3) (delay ((\i0 -> (\i0 -> i4 i2 i1) (sliceByteString 1 (subtractInteger i2 1) i4)) (indexByteString i3 0))))) (lengthOfByteString i2)) (\i0 -> \i0 -> force (i6 (equalsInteger i2 34) (delay (consByteString 92 (consByteString i2 (i4 i1)))) (delay (consByteString i2 (i4 i1)))))) (encodeUtf8 i1))) i3)) "") (force ifThenElse)) "\""))
str.hello123 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> appendString i3 (appendString (decodeUtf8 ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> (\i0 -> (\i0 -> force (i6 (equalsInteger i1 0) (delay i3) (delay ((\i0 -> (\i0 -> i4 i2 i1) (sliceByteString 1 (subtractInteger i2 1) i4)) (indexByteString i3 0))))) (lengthOfByteString i2)) (\i0 -> \i0 -> force (i6 (equalsInteger i2 34) (delay (consByteString 92 (consByteString i2 (i4 i1)))) (delay (consByteString i2 (i4 i1)))))) (encodeUtf8 i1))) i3)) "hello123") (force ifThenElse)) "\""))
str.quoted (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> appendString i3 (appendString (decodeUtf8 ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> (\i0 -> (\i0 -> force (i6 (equalsInteger i1 0) (delay i3) (delay ((\i0 -> (\i0 -> i4 i2 i1) (sliceByteString 1 (subtractInteger i2 1) i4)) (indexByteString i3 0))))) (lengthOfByteString i2)) (\i0 -> \i0 -> force (i6 (equalsInteger i2 34) (delay (consByteString 92 (consByteString i2 (i4 i1)))) (delay (consByteString i2 (i4 i1)))))) (encodeUtf8 i1))) i3)) "hello\"123") (force ifThenElse)) "\""))
str.slash (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> appendString i3 (appendString (decodeUtf8 ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> (\i0 -> (\i0 -> force (i6 (equalsInteger i1 0) (delay i3) (delay ((\i0 -> (\i0 -> i4 i2 i1) (sliceByteString 1 (subtractInteger i2 1) i4)) (indexByteString i3 0))))) (lengthOfByteString i2)) (\i0 -> \i0 -> force (i6 (equalsInteger i2 34) (delay (consByteString 92 (consByteString i2 (i4 i1)))) (delay (consByteString i2 (i4 i1)))))) (encodeUtf8 i1))) i3)) "foo\\bar") (force ifThenElse)) "\""))
str.unicode (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> appendString i3 (appendString (decodeUtf8 ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> (\i0 -> (\i0 -> force (i6 (equalsInteger i1 0) (delay i3) (delay ((\i0 -> (\i0 -> i4 i2 i1) (sliceByteString 1 (subtractInteger i2 1) i4)) (indexByteString i3 0))))) (lengthOfByteString i2)) (\i0 -> \i0 -> force (i6 (equalsInteger i2 34) (delay (consByteString 92 (consByteString i2 (i4 i1)))) (delay (consByteString i2 (i4 i1)))))) (encodeUtf8 i1))) i3)) "vis-\224-vis") (force ifThenElse)) "\""))
str.unicode-quoted (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> appendString i3 (appendString (decodeUtf8 ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> (\i0 -> (\i0 -> force (i6 (equalsInteger i1 0) (delay i3) (delay ((\i0 -> (\i0 -> i4 i2 i1) (sliceByteString 1 (subtractInteger i2 1) i4)) (indexByteString i3 0))))) (lengthOfByteString i2)) (\i0 -> \i0 -> force (i6 (equalsInteger i2 34) (delay (consByteString 92 (consByteString i2 (i4 i1)))) (delay (consByteString i2 (i4 i1)))))) (encodeUtf8 i1))) i3)) "vis-\"\224\"-vis") (force ifThenElse)) "\""))
maybe.nothing (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> appendString "PJust" (appendString " " ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> appendString (force (i16 (lessThanInteger i1 0) (delay "-") (delay ""))) ((\i0 -> (\i0 -> force (i18 (equalsInteger i2 0) (delay (i7 i1)) (delay ((\i0 -> appendString i1 (i8 i2)) (i4 i2))))) (remainderInteger (force (i17 (lessThanEqualsInteger i2 (subtractInteger 0 1)) (delay (subtractInteger 0 i2)) (delay i2))) 10)) (quotientInteger (force (i16 (lessThanEqualsInteger i1 (subtractInteger 0 1)) (delay (subtractInteger 0 i1)) (delay i1))) 10))) i1))) (delay "PNothing")) (\i0 -> \i0 -> force i1)) (\i0 -> force (i12 (equalsInteger i1 0) (delay i2) (delay (force (i12 (equalsInteger i1 1) (delay i3) (delay (force (i12 (equalsInteger i1 2) (delay i4) (delay (force (i12 (equalsInteger i1 3) (delay i5) (delay (force (i12 (equalsInteger i1 4) (delay i6) (delay (force (i12 (equalsInteger i1 5) (delay i7) (delay (force (i12 (equalsInteger i1 6) (delay i8) (delay (force (i12 (equalsInteger i1 7) (delay i9) (delay (force (i12 (equalsInteger i1 8) (delay i10) (delay (force (i12 (equalsInteger i1 9) (delay i11) (delay error))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") (force ifThenElse)))
maybe.just (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> appendString "PJust" (appendString " " ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> appendString (force (i16 (lessThanInteger i1 0) (delay "-") (delay ""))) ((\i0 -> (\i0 -> force (i18 (equalsInteger i2 0) (delay (i7 i1)) (delay ((\i0 -> appendString i1 (i8 i2)) (i4 i2))))) (remainderInteger (force (i17 (lessThanEqualsInteger i2 (subtractInteger 0 1)) (delay (subtractInteger 0 i2)) (delay i2))) 10)) (quotientInteger (force (i16 (lessThanEqualsInteger i1 (subtractInteger 0 1)) (delay (subtractInteger 0 i1)) (delay i1))) 10))) i1))) (delay "PNothing")) (\i0 -> \i0 -> i2 42)) (\i0 -> force (i12 (equalsInteger i1 0) (delay i2) (delay (force (i12 (equalsInteger i1 1) (delay i3) (delay (force (i12 (equalsInteger i1 2) (delay i4) (delay (force (i12 (equalsInteger i1 3) (delay i5) (delay (force (i12 (equalsInteger i1 4) (delay i6) (delay (force (i12 (equalsInteger i1 5) (delay i7) (delay (force (i12 (equalsInteger i1 6) (delay i8) (delay (force (i12 (equalsInteger i1 7) (delay i9) (delay (force (i12 (equalsInteger i1 8) (delay i10) (delay (force (i12 (equalsInteger i1 9) (delay i11) (delay error))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") (force ifThenElse)))
either.right (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> appendString "PLeft" (appendString i3 "()")) (\i0 -> appendString "PRight" (appendString i3 ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> appendString (force (i17 (lessThanInteger i1 0) (delay "-") (delay ""))) ((\i0 -> (\i0 -> force (i19 (equalsInteger i2 0) (delay (i8 i1)) (delay ((\i0 -> appendString i1 (i9 i2)) (i4 i2))))) (remainderInteger (force (i18 (lessThanEqualsInteger i2 (subtractInteger 0 1)) (delay (subtractInteger 0 i2)) (delay i2))) 10)) (quotientInteger (force (i17 (lessThanEqualsInteger i1 (subtractInteger 0 1)) (delay (subtractInteger 0 i1)) (delay i1))) 10))) i1)))) (\i0 -> \i0 -> i1 42)) " ") (\i0 -> force (i12 (equalsInteger i1 0) (delay i2) (delay (force (i12 (equalsInteger i1 1) (delay i3) (delay (force (i12 (equalsInteger i1 2) (delay i4) (delay (force (i12 (equalsInteger i1 3) (delay i5) (delay (force (i12 (equalsInteger i1 4) (delay i6) (delay (force (i12 (equalsInteger i1 5) (delay i7) (delay (force (i12 (equalsInteger i1 6) (delay i8) (delay (force (i12 (equalsInteger i1 7) (delay i9) (delay (force (i12 (equalsInteger i1 8) (delay i10) (delay (force (i12 (equalsInteger i1 9) (delay i11) (delay error))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") (force ifThenElse)))
maybe.either (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> appendString "PJust" (appendString i16 (i1 (\i0 -> appendString i16 (appendString (appendString "PLeft" (appendString i17 ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> appendString (force (i17 (lessThanInteger i1 0) (delay "-") (delay ""))) ((\i0 -> (\i0 -> force (i19 (equalsInteger i2 0) (delay (i8 i1)) (delay ((\i0 -> appendString i1 (i9 i2)) (i4 i2))))) (remainderInteger (force (i18 (lessThanEqualsInteger i2 (subtractInteger 0 1)) (delay (subtractInteger 0 i2)) (delay i2))) 10)) (quotientInteger (force (i17 (lessThanEqualsInteger i1 (subtractInteger 0 1)) (delay (subtractInteger 0 i1)) (delay i1))) 10))) i1))) i18)) (\i0 -> appendString i16 (appendString (appendString "PRight" (appendString i17 "()")) i18))))) (delay "PNothing")) (\i0 -> \i0 -> i2 (\i0 -> \i0 -> i2 42))) (\i0 -> force (i12 (equalsInteger i1 0) (delay i2) (delay (force (i12 (equalsInteger i1 1) (delay i3) (delay (force (i12 (equalsInteger i1 2) (delay i4) (delay (force (i12 (equalsInteger i1 3) (delay i5) (delay (force (i12 (equalsInteger i1 4) (delay i6) (delay (force (i12 (equalsInteger i1 5) (delay i7) (delay (force (i12 (equalsInteger i1 6) (delay i8) (delay (force (i12 (equalsInteger i1 7) (delay i9) (delay (force (i12 (equalsInteger i1 8) (delay i10) (delay (force (i12 (equalsInteger i1 9) (delay i11) (delay error))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") (force ifThenElse)) "(") " ") ")"))
list.nil (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> appendString "[" (appendString (i17 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> appendString (i8 i4) (appendString ", " (i6 i3))) (delay (i6 i2))) (delay i18)) i1) "]")) (i16 (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> \i0 -> force i1)) (delay ((\i0 -> \i0 -> \i0 -> \i0 -> i2 i4 i3) (force headList i1) (i2 (force tailList i1)))))) [])) (i15 (\i0 -> \i0 -> appendString (force (i15 (lessThanInteger i1 0) (delay i3) (delay i16))) ((\i0 -> (\i0 -> force (i17 (equalsInteger i2 0) (delay (i6 i1)) (delay ((\i0 -> appendString i1 (i7 i2)) (i4 i2))))) (remainderInteger (force (i16 (lessThanEqualsInteger i2 (subtractInteger 0 1)) (delay (subtractInteger 0 i2)) (delay i2))) 10)) (quotientInteger (force (i15 (lessThanEqualsInteger i1 (subtractInteger 0 1)) (delay (subtractInteger 0 i1)) (delay i1))) 10))))) "-") (\i0 -> force (i12 (equalsInteger i1 0) (delay i2) (delay (force (i12 (equalsInteger i1 1) (delay i3) (delay (force (i12 (equalsInteger i1 2) (delay i4) (delay (force (i12 (equalsInteger i1 3) (delay i5) (delay (force (i12 (equalsInteger i1 4) (delay i6) (delay (force (i12 (equalsInteger i1 5) (delay i7) (delay (force (i12 (equalsInteger i1 6) (delay i8) (delay (force (i12 (equalsInteger i1 7) (delay i9) (delay (force (i12 (equalsInteger i1 8) (delay i10) (delay (force (i12 (equalsInteger i1 9) (delay i11) (delay error))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") (force ifThenElse)) "") (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))))
list.1 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> appendString "[" (appendString (i17 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> appendString (i8 i4) (appendString ", " (i6 i3))) (delay (i6 i2))) (delay i18)) i1) "]")) (i16 (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> \i0 -> force i1)) (delay ((\i0 -> \i0 -> \i0 -> \i0 -> i2 i4 i3) (force headList i1) (i2 (force tailList i1)))))) [1])) (i15 (\i0 -> \i0 -> appendString (force (i15 (lessThanInteger i1 0) (delay i3) (delay i16))) ((\i0 -> (\i0 -> force (i17 (equalsInteger i2 0) (delay (i6 i1)) (delay ((\i0 -> appendString i1 (i7 i2)) (i4 i2))))) (remainderInteger (force (i16 (lessThanEqualsInteger i2 (subtractInteger 0 1)) (delay (subtractInteger 0 i2)) (delay i2))) 10)) (quotientInteger (force (i15 (lessThanEqualsInteger i1 (subtractInteger 0 1)) (delay (subtractInteger 0 i1)) (delay i1))) 10))))) "-") (\i0 -> force (i12 (equalsInteger i1 0) (delay i2) (delay (force (i12 (equalsInteger i1 1) (delay i3) (delay (force (i12 (equalsInteger i1 2) (delay i4) (delay (force (i12 (equalsInteger i1 3) (delay i5) (delay (force (i12 (equalsInteger i1 4) (delay i6) (delay (force (i12 (equalsInteger i1 5) (delay i7) (delay (force (i12 (equalsInteger i1 6) (delay i8) (delay (force (i12 (equalsInteger i1 7) (delay i9) (delay (force (i12 (equalsInteger i1 8) (delay i10) (delay (force (i12 (equalsInteger i1 9) (delay i11) (delay error))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") (force ifThenElse)) "") (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))))
list.1,2,3 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> appendString "[" (appendString (i17 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> appendString (i8 i4) (appendString ", " (i6 i3))) (delay (i6 i2))) (delay i18)) i1) "]")) (i16 (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> \i0 -> force i1)) (delay ((\i0 -> \i0 -> \i0 -> \i0 -> i2 i4 i3) (force headList i1) (i2 (force tailList i1)))))) [1,2,3])) (i15 (\i0 -> \i0 -> appendString (force (i15 (lessThanInteger i1 0) (delay i3) (delay i16))) ((\i0 -> (\i0 -> force (i17 (equalsInteger i2 0) (delay (i6 i1)) (delay ((\i0 -> appendString i1 (i7 i2)) (i4 i2))))) (remainderInteger (force (i16 (lessThanEqualsInteger i2 (subtractInteger 0 1)) (delay (subtractInteger 0 i2)) (delay i2))) 10)) (quotientInteger (force (i15 (lessThanEqualsInteger i1 (subtractInteger 0 1)) (delay (subtractInteger 0 i1)) (delay i1))) 10))))) "-") (\i0 -> force (i12 (equalsInteger i1 0) (delay i2) (delay (force (i12 (equalsInteger i1 1) (delay i3) (delay (force (i12 (equalsInteger i1 2) (delay i4) (delay (force (i12 (equalsInteger i1 3) (delay i5) (delay (force (i12 (equalsInteger i1 4) (delay i6) (delay (force (i12 (equalsInteger i1 5) (delay i7) (delay (force (i12 (equalsInteger i1 6) (delay i8) (delay (force (i12 (equalsInteger i1 7) (delay i9) (delay (force (i12 (equalsInteger i1 8) (delay i10) (delay (force (i12 (equalsInteger i1 9) (delay i11) (delay error))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") (force ifThenElse)) "") (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))))
builtinlist.nil (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> appendString "[" (appendString (i4 (\i0 -> \i0 -> force (i4 i1 (delay i8) (delay ((\i0 -> force (i5 i1 (delay (i6 (i22 i2))) (delay (appendString (i6 (i22 i2)) (appendString ", " (i3 (i23 i2))))))) (i22 i1))))) i1) "]")) []) (force (force chooseList))) (i1 (\i0 -> \i0 -> appendString (force (i17 (lessThanInteger i1 0) (delay i4) (delay i5))) ((\i0 -> (\i0 -> force (i19 (equalsInteger i2 0) (delay (i8 i1)) (delay ((\i0 -> appendString i1 (i9 i2)) (i4 i2))))) (remainderInteger (force (i18 (lessThanEqualsInteger i2 (subtractInteger 0 1)) (delay (subtractInteger 0 i2)) (delay i2))) 10)) (quotientInteger (force (i17 (lessThanEqualsInteger i1 (subtractInteger 0 1)) (delay (subtractInteger 0 i1)) (delay i1))) 10))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) "-") "") (\i0 -> force (i12 (equalsInteger i1 0) (delay i2) (delay (force (i12 (equalsInteger i1 1) (delay i3) (delay (force (i12 (equalsInteger i1 2) (delay i4) (delay (force (i12 (equalsInteger i1 3) (delay i5) (delay (force (i12 (equalsInteger i1 4) (delay i6) (delay (force (i12 (equalsInteger i1 5) (delay i7) (delay (force (i12 (equalsInteger i1 6) (delay i8) (delay (force (i12 (equalsInteger i1 7) (delay i9) (delay (force (i12 (equalsInteger i1 8) (delay i10) (delay (force (i12 (equalsInteger i1 9) (delay i11) (delay error))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") (force ifThenElse)) (force headList)) (force tailList)))
builtinlist.1,2,3 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> appendString "[" (appendString (i4 (\i0 -> \i0 -> force (i4 i1 (delay i8) (delay ((\i0 -> force (i5 i1 (delay (i6 (i22 i2))) (delay (appendString (i6 (i22 i2)) (appendString ", " (i3 (i23 i2))))))) (i22 i1))))) i1) "]")) [1,2,3]) (force (force chooseList))) (i1 (\i0 -> \i0 -> appendString (force (i17 (lessThanInteger i1 0) (delay i4) (delay i5))) ((\i0 -> (\i0 -> force (i19 (equalsInteger i2 0) (delay (i8 i1)) (delay ((\i0 -> appendString i1 (i9 i2)) (i4 i2))))) (remainderInteger (force (i18 (lessThanEqualsInteger i2 (subtractInteger 0 1)) (delay (subtractInteger 0 i2)) (delay i2))) 10)) (quotientInteger (force (i17 (lessThanEqualsInteger i1 (subtractInteger 0 1)) (delay (subtractInteger 0 i1)) (delay i1))) 10))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) "-") "") (\i0 -> force (i12 (equalsInteger i1 0) (delay i2) (delay (force (i12 (equalsInteger i1 1) (delay i3) (delay (force (i12 (equalsInteger i1 2) (delay i4) (delay (force (i12 (equalsInteger i1 3) (delay i5) (delay (force (i12 (equalsInteger i1 4) (delay i6) (delay (force (i12 (equalsInteger i1 5) (delay i7) (delay (force (i12 (equalsInteger i1 6) (delay i8) (delay (force (i12 (equalsInteger i1 7) (delay i9) (delay (force (i12 (equalsInteger i1 8) (delay i10) (delay (force (i12 (equalsInteger i1 9) (delay i11) (delay error))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") (force ifThenElse)) (force headList)) (force tailList)))
pair.int-str (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> appendString "PPair" (appendString i15 (appendString (i16 (\i0 -> \i0 -> appendString (force (i19 (lessThanInteger i1 0) (delay "-") (delay ""))) ((\i0 -> (\i0 -> force (i21 (equalsInteger i2 0) (delay (i8 i1)) (delay ((\i0 -> appendString i1 (i9 i2)) (i4 i2))))) (remainderInteger (force (i20 (lessThanEqualsInteger i2 (subtractInteger 0 1)) (delay (subtractInteger 0 i2)) (delay i2))) 10)) (quotientInteger (force (i19 (lessThanEqualsInteger i1 (subtractInteger 0 1)) (delay (subtractInteger 0 i1)) (delay i1))) 10))) i2) (appendString i15 (appendString i18 (appendString (decodeUtf8 (i16 (\i0 -> \i0 -> (\i0 -> (\i0 -> force (i21 (equalsInteger i1 0) (delay i3) (delay ((\i0 -> (\i0 -> i4 i2 i1) (sliceByteString 1 (subtractInteger i2 1) i4)) (indexByteString i3 0))))) (lengthOfByteString i2)) (\i0 -> \i0 -> force (i21 (equalsInteger i2 34) (delay (consByteString 92 (consByteString i2 (i4 i1)))) (delay (consByteString i2 (i4 i1)))))) (encodeUtf8 i1))) i18))))))) (\i0 -> i1 42 "hello")) (\i0 -> force (i14 (equalsInteger i1 0) (delay i2) (delay (force (i14 (equalsInteger i1 1) (delay i3) (delay (force (i14 (equalsInteger i1 2) (delay i4) (delay (force (i14 (equalsInteger i1 3) (delay i5) (delay (force (i14 (equalsInteger i1 4) (delay i6) (delay (force (i14 (equalsInteger i1 5) (delay i7) (delay (force (i14 (equalsInteger i1 6) (delay i8) (delay (force (i14 (equalsInteger i1 7) (delay i9) (delay (force (i14 (equalsInteger i1 8) (delay i10) (delay (force (i14 (equalsInteger i1 9) (delay i11) (delay error))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") " ") (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force ifThenElse)) "\""))
pair.int-list (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> appendString "PPair" (appendString i4 (appendString (i6 i2) (appendString i4 (appendString "[" (appendString (i7 (\i0 -> \i0 -> force (i7 i1 (delay i11) (delay ((\i0 -> force (i8 i1 (delay (i9 (i25 i2))) (delay (appendString (i9 (i25 i2)) (appendString ", " (i3 (i26 i2))))))) (i25 i1))))) i1) "]"))))))) (\i0 -> i1 42 [1,2,3])) " ") (force (force chooseList))) (i1 (\i0 -> \i0 -> appendString (force (i17 (lessThanInteger i1 0) (delay i4) (delay i5))) ((\i0 -> (\i0 -> force (i19 (equalsInteger i2 0) (delay (i8 i1)) (delay ((\i0 -> appendString i1 (i9 i2)) (i4 i2))))) (remainderInteger (force (i18 (lessThanEqualsInteger i2 (subtractInteger 0 1)) (delay (subtractInteger 0 i2)) (delay i2))) 10)) (quotientInteger (force (i17 (lessThanEqualsInteger i1 (subtractInteger 0 1)) (delay (subtractInteger 0 i1)) (delay i1))) 10))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) "-") "") (\i0 -> force (i12 (equalsInteger i1 0) (delay i2) (delay (force (i12 (equalsInteger i1 1) (delay i3) (delay (force (i12 (equalsInteger i1 2) (delay i4) (delay (force (i12 (equalsInteger i1 3) (delay i5) (delay (force (i12 (equalsInteger i1 4) (delay i6) (delay (force (i12 (equalsInteger i1 5) (delay i7) (delay (force (i12 (equalsInteger i1 6) (delay i8) (delay (force (i12 (equalsInteger i1 7) (delay i9) (delay (force (i12 (equalsInteger i1 8) (delay i10) (delay (force (i12 (equalsInteger i1 9) (delay i11) (delay error))))))))))))))))))))))))))))))) "0") "1") "2") "3") "4") "5") "6") "7") "8") "9") (force ifThenElse)) (force headList)) (force tailList)))